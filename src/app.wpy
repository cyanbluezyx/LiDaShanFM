<style lang="less">
@import "./styles/base";
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>
<template>
  <view>111</view>
</template>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import {
  USER_SPECICAL_INFO,
  USER_INFO,
  SYSTEM_INFO,
  AUDIO_PATH,
  CURRENT_AUDIO,
  SESSION_ID
} from './utils/constant'

import {
  wxCode2Session,
  wxLogin,
  addPlayCount
} from './api/api'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
const state = store.getState()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/radio',
      'pages/community',
      'pages/wall',
      'pages/info',
      'pages/radio/radio_play'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#EC1D24',
      navigationBarTitleText: '李大山FM',
      navigationBarTextStyle: 'white',
      enablePullDownRefresh: true
    },
    "tabBar": {
      "color": "#2C2C2C",
      "selectedColor": "#EC1D24",
      "backgroundColor": "#F3F3F3",
      "borderStyle": "black",
      "list": [{
      "pagePath": "pages/radio",
      "text": "电台",
      "iconPath": "images/radio_logo.png",
      "selectedIconPath": "images/radio_logo_active.png"
      }, {
      "pagePath": "pages/community",
      "text": "声控",
      "iconPath": "images/micro_logo.png",
      "selectedIconPath": "images/micro_logo_active.png"
      }, {
      "pagePath": "pages/wall",
      "text": "表白墙",
      "iconPath": "images/love_logo.png",
      "selectedIconPath": "images/love_logo_active.png"
      }, {
      "pagePath": "pages/info",
      "text": "我",
      "iconPath": "images/info_logo.png",
      "selectedIconPath": "images/info_logo_active.png"
      }]
    }
  }

  globalData = {
    userInfo: null,
    appid: 'wxbdc9e5c5e85a8f71',
    curAudio: wx.getStorageSync(CURRENT_AUDIO),
    curAudioList: [],
    backgroundAudioPlay: {}
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify');
    this.intercept('request', {
        config (p) {
            p.timestamp = +new Date();
            return p;
        },
        success (p) {
            console.log('request success');
            return p;
        },
        fail (p) {
            console.log('request error');
            return p;
        }
    });
  }

  async onLaunch() {
    let isExpired = false
    wx.checkSession({
      success: function(){
        //session 未过期，并且在本生命周期一直有效
        isExpired = false
      },
      fail: function(){
        //登录态过期
        isExpired = true
      }
    })
    if(isExpired){
      let res = await wepy.login()
      if(res.code){
        let c = await wepy.getUserInfo();
        wxCode2Session({
          query: {
            jsCode: res.code,
            userInfo: c
          }
        }).then(resp => {
          let res = resp.data
          if(res.status == '0'){
            wepy.setStorageSync('openid',res.result);
            wepy.setStorageSync(USER_INFO, c.userInfo)
            let systemInfo = wepy.getSystemInfoSync();
            wepy.setStorageSync(SYSTEM_INFO, systemInfo);
          }
        })
      }
    }
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
  addPlayCount(radioId) {
    addPlayCount({
      method: 'POST',
      query: {
        audioId: radioId
      }
    })
  }
  
}
</script>
